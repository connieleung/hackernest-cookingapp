(function(window, document, undefined){
    var inputs = {
            ax: [],
            ay: [],
            az: [],
//            gx: [],
//            gy: [],
//            gz: [],
        },
        training = {
            // comparison data array - from a motion. Accelerator (ax, ay, az) and Gyroscope (gx, gy, gz) timepoints
            ax: [0.106933594,0.112304688,0.109375,0.106445313,0.104492188,0.09765625,0.111816406,0.111816406,0.111816406,0.100097656,0.099609375,0.108398438,0.091308594,0.079101563,0.073242188,0.082519531,0.073730469,0.083496094,0.08984375,0.095214844,0.095214844,0.094726563,0.086914063,0.064453125,0.095703125,0.083984375,0.077636719,0.083496094,0.086425781,0.089355469,0.095214844,0.099121094,0.091308594,0.083984375,0.073242188,0.076660156,0.060546875,0.07421875,0.063964844,0.078613281,0.090332031,0.121582031,0.131347656,0.143066406,0.168457031,0.141113281,0.157226563,0.186523438,0.223632813,0.264648438,0.296875,0.318359375,0.354980469,0.315429688,0.353515625,0.418457031,0.463378906,0.492675781,0.46875,0.422363281,0.348144531,0.282714844,0.163574219,-0.001953125,-0.227050781,-0.446777344,-0.637207031,-0.750488281,-0.834472656,-0.91796875,-0.983886719,-1.015625,-0.986328125,-0.84765625,-0.470214844,-0.192382813,0.141601563,0.368164063,0.427246094,0.412597656,0.376464844,0.365722656,0.284179688,0.231445313,0.216796875,0.205078125,0.141601563,0.062988281,0.012207031,0.042480469,0.041015625,0.055664063,0.0078125,-0.048828125,-0.065917969,-0.029785156,-0.089355469,-0.147949219,-0.144042969,-0.223632813,-0.295410156,-0.433105469,-0.661621094,-0.720214844,-0.588867188,-0.409179688,-0.279296875,-0.0078125,0.203613281,0.510253906,0.704589844,0.846191406,0.779296875,0.708984375,0.678222656,0.583984375,0.405761719,0.268554688,0.188964844,0.118652344,0.108886719,0.05859375,0.017089844,0.015625,0.038085938,0.018066406,0.000488281,0.010253906,0.023925781,0.032226563,0.013183594,0.022460938,0.041015625,0.030273438,0.051757813,0.032714844,0.03515625,0.059082031,0.048828125,0.051757813,0.044921875,0.071777344,0.086425781,0.059570313,0.0703125,0.077148438,0.045898438,0.109863281,0.0546875,0.077148438],
            ay: [0.095703125,0.091308594,0.08984375,0.091796875,0.091308594,0.080078125,0.086914063,0.091796875,0.100097656,0.080566406,0.101074219,0.101074219,0.086914063,0.06640625,0.066894531,0.069824219,0.078613281,0.079101563,0.072753906,0.080566406,0.080566406,0.081542969,0.09375,0.098632813,0.078125,0.075195313,0.078125,0.076660156,0.086914063,0.096679688,0.092285156,0.089355469,0.0859375,0.090332031,0.082519531,0.086425781,0.073242188,0.056152344,0.056640625,0.055175781,0.061523438,0.083007813,0.097167969,0.104980469,0.087402344,0.072265625,0.061523438,0.0546875,0.047363281,0.050292969,0.046386719,0.032714844,0.029296875,0.012695313,-0.030273438,-0.025878906,-0.020019531,-0.008789063,-0.002929688,-0.013671875,-0.023925781,-0.023925781,-0.005859375,0.021484375,0.024902344,0.041992188,0.060058594,0.15625,0.221191406,0.285644531,0.32421875,0.369140625,0.355957031,0.331054688,0.324707031,0.406738281,0.45703125,0.439941406,0.380371094,0.330078125,0.313476563,0.315917969,0.338378906,0.317871094,0.275878906,0.233398438,0.185546875,0.111328125,0.043945313,-0.040039063,-0.085449219,-0.139160156,-0.153808594,-0.173339844,-0.1953125,-0.180175781,-0.128417969,-0.045410156,0.0234375,0.05859375,0.059082031,0.069824219,0.094726563,0.138183594,0.184570313,0.238769531,0.302734375,0.328613281,0.392089844,0.430175781,0.423339844,0.393066406,0.358886719,0.321289063,0.27734375,0.238769531,0.1875,0.162109375,0.165527344,0.187011719,0.208496094,0.206054688,0.198730469,0.192382813,0.178710938,0.162597656,0.150878906,0.149902344,0.145019531,0.138671875,0.145507813,0.147949219,0.154785156,0.165527344,0.181152344,0.163574219,0.166992188,0.166503906,0.150878906,0.146972656,0.156738281,0.162597656,0.16796875,0.173339844,0.132324219,0.14453125,0.142578125,0.143066406,0.162109375,0.138183594],
            az: [0.930664063,0.922363281,0.921875,0.912597656,0.898925781,0.899414063,0.907714844,0.923339844,0.936523438,0.921386719,0.932617188,0.935546875,0.926757813,0.91015625,0.905761719,0.909667969,0.922851563,0.911132813,0.899902344,0.915527344,0.915527344,0.91796875,0.939453125,0.942382813,0.918945313,0.91796875,0.909179688,0.909179688,0.922851563,0.937011719,0.934570313,0.931152344,0.91796875,0.930664063,0.934082031,0.941894531,0.953125,0.958984375,0.985351563,1.005859375,1.052734375,1.1171875,1.157226563,1.138671875,1.137695313,1.151855469,1.161132813,1.212402344,1.237792969,1.254882813,1.259277344,1.186523438,1.08984375,1.022460938,0.917480469,0.8359375,0.728515625,0.623535156,0.452636719,0.260742188,0.115234375,-0.024414063,-0.091796875,-0.080566406,-0.060058594,-0.033203125,0.041992188,0.220214844,0.439453125,0.669921875,0.983398438,1.328125,1.598632813,1.817382813,2.0390625,2.311035156,2.500488281,2.452636719,2.193847656,1.863769531,1.541992188,1.283203125,1.09765625,0.932617188,0.812011719,0.720703125,0.602539063,0.481933594,0.329101563,0.196289063,0.104003906,0.032714844,0.010742188,-0.010253906,-0.043457031,0.023925781,0.13671875,0.287597656,0.471191406,0.634277344,0.84375,1.099121094,1.368652344,1.517089844,1.500976563,1.477539063,1.4453125,1.394042969,1.361816406,1.29296875,1.186035156,1.08203125,1.033691406,0.975585938,0.926757813,0.880859375,0.866210938,0.86328125,0.876464844,0.939453125,0.96875,0.982421875,0.973632813,0.941894531,0.915527344,0.891113281,0.888671875,0.897949219,0.877929688,0.869140625,0.887207031,0.89453125,0.897460938,0.897460938,0.924316406,0.927246094,0.927734375,0.916503906,0.889648438,0.899414063,0.897460938,0.932128906,0.948242188,0.9140625,0.918457031,0.930175781,0.896972656,0.915527344,0.918457031,0.899902344],
//            gx: [-6.004333496,-6.744384766,-7.057189941,-7.270812988,-7.354736328,-6.439208984,-6.195068359,-6.851196289,-7.377624512,-7.934570313,-11.26861572,-13.29803467,-13.45062256,-11.55090332,-8.148193359,-4.600524902,-3.829956055,-4.165649414,-4.043579102,-3.387451172,-3.387451172,-1.274108887,-0.991821289,-2.044677734,-2.243041992,-3.189086914,-3.33404541,-1.899719238,-0.549316406,0.556945801,0.556945801,-1.38092041,-2.708435059,-2.410888672,-1.136779785,-1.449584961,-2.059936523,-3.608703613,-4.829406738,-4.188537598,-3.753662109,-5.180358887,-10.74981689,-20.35522461,-26.9317627,-30.45654297,-31.75354004,-33.05053711,-39.15405273,-48.6831665,-57.92236328,-70.44219971,-80.58166504,-84.45739746,-86.62414551,-88.98925781,-87.15057373,-79.90264893,-73.02856445,-65.46020508,-55.16052246,-35.51483154,-6.02722168,27.50396729,55.78613281,80.89447021,105.5831909,131.9503784,157.6004028,170.6848145,174.6826172,165.1077271,143.9590454,124.710083,112.5183105,93.78051758,56.03027344,0.480651855,-53.80249023,-95.01647949,-124.7024536,-143.3868408,-153.213501,-154.800415,-153.1600952,-149.2843628,-143.2113647,-134.1934204,-122.6959229,-104.3624878,-81.70318604,-56.95343018,-32.70721436,-8.834838867,17.44842529,49.48425293,77.61383057,97.61047363,113.6169434,125.7400513,134.0713501,135.2081299,126.701355,108.7722778,89.9810791,75.87432861,60.4095459,45.17364502,31.47125244,20.77484131,8.407592773,-0.114440918,-4.295349121,-10.19287109,-15.58685303,-19.45495605,-19.79064941,-16.63970947,-11.46697998,-7.774353027,-8.689880371,-11.07025146,-14.43481445,-16.19720459,-15.17486572,-13.29040527,-11.03973389,-10.00976563,-10.09368896,-10.05554199,-8.232116699,-5.882263184,-4.96673584,-4.79888916,-3.952026367,-3.868103027,-5.493164063,-6.385803223,-5.844116211,-4.829406738,-4.63104248,-3.547668457,-4.135131836,-5.233764648,-3.997802734,-7.057189941,-8.079528809,-7.514953613,-8.369445801,-6.721496582],
//            gy: [-0.778198242,0.282287598,0.57220459,-0.40435791,-0.396728516,0.80871582,1.991271973,3.395080566,3.196716309,0.65612793,4.79888916,11.91711426,14.01519775,9.780883789,3.028869629,-3.471374512,-3.82232666,-2.586364746,-1.724243164,0.152587891,0.152587891,-3.25012207,-3.471374512,-4.219055176,-5.760192871,-1.174926758,0.74005127,-0.999450684,-3.189086914,-6.065368652,-6.088256836,-2.03704834,0.556945801,0.175476074,-2.403259277,-3.059387207,-2.883911133,-1.609802246,0.579833984,-3.25012207,-8.911132813,-12.72583008,-12.0010376,-8.895874023,-4.180908203,-4.760742188,-13.22937012,-19.08874512,-19.3939209,-16.54052734,-13.58795166,-8.95690918,-9.117126465,-11.5737915,-14.7857666,-12.75634766,-11.89422607,-10.52093506,-1.533508301,12.48168945,25.91705322,31.17370605,29.9911499,27.30560303,36.56005859,48.03466797,53.52783203,45.87554932,24.86419678,11.54327393,7.781982422,9.735107422,22.95684814,24.03259277,-7.98034668,-43.18237305,-53.34472656,-36.57531738,-22.75848389,-17.68493652,-17.15087891,-24.71160889,-34.21020508,-48.73657227,-55.93109131,-56.48803711,-52.49023438,-49.23248291,-42.81616211,-39.1998291,-34.69085693,-28.30505371,-20.15686035,-13.21411133,-8.293151855,-12.50457764,-13.18359375,-6.942749023,-3.150939941,-1.022338867,-0.32043457,-0.938415527,-1.266479492,-1.884460449,-9.857177734,-19.92034912,-26.52740479,-29.82330322,-31.29577637,-31.13555908,-18.77593994,-14.13726807,-13.02337646,-9.719848633,-3.440856934,5.165100098,9.757995605,4.31060791,-3.601074219,-7.461547852,-5.668640137,-2.410888672,-0.411987305,-0.076293945,0.183105469,-0.40435791,-2.113342285,-4.356384277,-3.58581543,0.274658203,2.136230469,0.160217285,-1.129150391,0.053405762,-0.091552734,0.373840332,1.953125,1.434326172,0.16784668,1.968383789,2.113342285,-0.701904297,-3.135681152,-5.363464355,-3.814697266,1.647949219,0.610351563,0.434875488,0.106811523,-3.692626953],
//            gz: [1.457214355,0.984191895,1.251220703,1.693725586,1.533508301,0.923156738,0.061035156,-0.076293945,0.74005127,1.937866211,-0.511169434,-3.01361084,-2.967834473,-1.914978027,0.061035156,2.044677734,2.349853516,1.266479492,0.633239746,0.534057617,0.534057617,2.281188965,3.395080566,3.646850586,2.021789551,1.045227051,0.541687012,0.457763672,0.778198242,1.205444336,0.938415527,-0.282287598,-0.473022461,-0.274658203,-0.137329102,-1.007080078,-1.358032227,-3.005981445,-3.768920898,-3.898620605,-3.433227539,-3.242492676,-2.655029297,-3.639221191,-3.997802734,-0.793457031,2.624511719,5.516052246,6.454467773,6.477355957,7.705688477,10.00213623,14.57977295,22.64404297,26.71051025,29.40368652,37.12463379,48.61450195,61.06567383,72.21221924,82.13806152,94.38323975,111.579895,125.8773804,130.1498413,124.0081787,111.4273071,96.33636475,80.11627197,54.80957031,23.11706543,-13.87786865,-54.53491211,-88.65356445,-108.4289551,-111.4273071,-112.4954224,-111.1907959,-100.5554199,-86.75384521,-73.67706299,-61.14959717,-46.98181152,-35.15625,-27.66418457,-20.01190186,-11.27624512,-3.90625,-1.022338867,0.411987305,5.081176758,11.20758057,17.73071289,20.87402344,19.50073242,20.77484131,23.8494873,18.9666748,10.28442383,4.386901855,-4.150390625,-14.63317871,-29.81567383,-58.64715576,-89.64538574,-112.7853394,-130.9127808,-146.3317871,-150.0701904,-144.7219849,-129.5852661,-104.6295166,-74.68414307,-54.07714844,-39.51263428,-22.68981934,-5.767822266,5.973815918,12.08496094,14.40429688,13.22937012,13.5345459,12.66479492,10.15472412,9.368896484,10.887146,11.84844971,10.44464111,8.178710938,6.011962891,5.729675293,5.401611328,4.638671875,4.386901855,3.143310547,3.028869629,1.586914063,0.465393066,1.594543457,1.21307373,0.57220459,0.274658203,1.731872559,4.875183105,4.089355469,1.106262207,0.854492188,-1.373291016,1.14440918,1.121520996]
            //mx: [26,27,25,29,25,28,27,26,27,27,26,28,27,29,29,25,27,30,30,30,26,29,27,26,26,28,29,29,26,26,27,27,26,24,27,25,25,25,26,27,25,25,25,27,27,27,27,29,31,31,34,35,35,34,43,44,43,50,50,51,52,54,57,56,54,53,50,45,43,38,33,28,25,23,17,13,13,13,15,15,17,19,24,30,35,37,44,49,49,53,53,58,56,56,54,53,54,51,50,46,43,39,36,30,28,23,22,16,17,13,13,9,10,13,11,9,12,11,10,12,15,12,13,13,11,13,16,13,15,13,14,13,15,13,17,16,16,16,13,16,12,16,15,19,15,16,15,14,14,17],
            //my: [-34,-32,-32,-30,-32,-31,-34,-30,-31,-31,-32,-31,-31,-29,-28,-30,-30,-30,-30,-32,-29,-31,-31,-29,-29,-32,-28,-28,-31,-28,-32,-31,-31,-29,-32,-30,-32,-29,-32,-30,-30,-34,-30,-32,-31,-31,-33,-32,-33,-33,-34,-34,-34,-33,-35,-31,-34,-33,-33,-32,-30,-29,-27,-23,-19,-18,-16,-12,-8,-8,-8,-6,-8,-6,-7,-10,-14,-13,-15,-13,-15,-17,-19,-18,-21,-21,-23,-24,-24,-27,-26,-26,-29,-27,-25,-26,-26,-27,-27,-27,-27,-28,-27,-29,-29,-31,-31,-33,-35,-33,-34,-37,-38,-37,-37,-38,-37,-37,-39,-36,-39,-39,-35,-37,-36,-38,-39,-39,-36,-41,-37,-38,-37,-40,-35,-36,-37,-37,-34,-38,-36,-37,-37,-38,-36,-34,-38,-40,-36,-37],
            //mz: [100,102,95,98,102,98,99,97,100,100,99,98,99,99,98,97,99,95,97,99,95,97,98,101,96,96,102,102,100,99,98,98,99,98,99,98,101,100,100,99,97,99,99,95,98,100,97,102,96,95,96,95,93,95,93,93,91,87,91,85,84,86,85,86,88,89,85,90,95,93,97,99,99,101,100,102,104,101,104,101,100,103,102,100,97,94,92,93,90,90,86,84,79,84,87,89,87,88,93,89,94,97,103,95,100,102,103,100,100,102,98,98,100,100,100,102,99,100,103,100,100,98,100,102,100,100,100,98,100,96,100,97,99,100,98,100,98,99,98,95,100,96,99,100,100,100,102,98,100,98]
       };

    // There are more optimal ways to run this algorithm. This is the just the simplest [this is o(nxm)! ew!].
    // Please research and update for performance.
    var DTWDistance = function(input, t, amt){
        var DTW = [], // size = n x m
            i,j, //counters
            n = input.length,
            m = t.length,
            infinity = 99999; // pretty much infinity...

        // set top row of first column of matrix as infinity
        for(i=0; i<n;i++){
            DTW[i] = []; //make this a matrix
            DTW[i][0] = infinity;
        }
        for(i=1;i<m;i++){
            DTW[0][i] = infinity;
        }

        DTW[0][0] = 0;

        // calculate distance, save in matrix
        for(i=1;i<n;i++){
            for(j=1;j<m;j++){
                cost = Math.abs((input[i] - t[j])/amt);
                DTW[i][j] = cost + Math.min(DTW[i-1][j], DTW[i][j-1], DTW[i-1][j-1]);
            }
        }

        // distance between the two sets
        return DTW[n-1][m-1];
    };

    // add new timepoint - expecting JSON data containing ax, ay, az, gx, gy, gz
    var addInput = function(data){

        var toParse = data;

        //console.log(toParse);

        Object.keys(inputs).forEach(function(option){
            inputs[option][inputs[option].length] = parseFloat(toParse[option]);
            if(inputs[option].length > 100){ // save the last 120 time points for each input array
                inputs[option].shift();
            }
        });

        //console.log(inputs);
        
        return(getScore());
    };

    // returns the DTW score of all 6 arrays added    
    var getScore = function(){
        var total = 0,
            ret = {};
        Object.keys(inputs).forEach(function(option){
            ret[option] = DTWDistance(inputs[option], training[option], option.match(/g/) ? 360 : 16);
            total += ret[option]
        });
        ret.total = total;
        //counting total predictions below threshold
       return ret;
    };


    // make available to window
    window.DTW = addInput;
})(this,document);